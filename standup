#!/bin/bash
set -euo pipefail
shopt -s nocasematch

repo=$(dirname $(realpath $0))
cmd="$EDITOR"
date=today

main() {
    for arg; do
        case "$arg" in
            git)
                shift
                exec git -C $repo "$@";;

            status|st|diff|di|push|pull|grep)
                exec git -C $repo "$@";;

            commit|ci)
                shift
                git -C $repo add .
                exec git -C $repo commit -v ${1:+-m} "$*";;

            view)
                cmd=pan
                shift;;

            preview)
                cmd=markdown2html
                shift;;

            link|open)
                cmd="xdg-open"
                repo="$(git -C $repo remote get-url origin)"

                if [[ ! $repo =~ github\.com ]]; then
                    echo "Remote origin ($repo) doesn't appear to be GitHub." >&2
                    exit 1
                fi

                # Rewrite repo to URL
                repo="${repo#*github.com[:/]}"
                repo="${repo%.git}"
                repo="https://github.com/$repo/blob/master"   # assume we're always on master for now
                shift;;

            edit)
                # no-op, we default to this
                shift;;

            *)
                date="$*"
                break;;
        esac
    done

    if [[ $date =~ ^(last|prev(ious)?)$ ]]; then
        # Find the last/previous entry.
        date="$(basename $(ls -t "$repo"/????-??-??.md | head -n1) .md)"
    fi

    if [[ $date =~ ^(monday|tuesday|wednesday|thursday|friday|saturday|sunday)$ ]]; then
        # Prefer past days when referring to by name.  I rarely write about the
        # future and more frequently want to re-read the past.
        date="last $date"
    fi

    date="$(date +%F -d "$date")"
    exec $cmd "$repo/$date.md"
}

main "$@"
